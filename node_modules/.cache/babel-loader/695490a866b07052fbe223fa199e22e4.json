{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pranaw/Desktop/Codes/music-player/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Component } from 'react';\nimport { render } from 'react-dom';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport '../node_modules/flickity/dist/flickity.pkgd.min.js';\nimport Navbar from './components/Heading/Navbar';\nimport Footer from './components/Footer/Footer';\nimport Carousel from './components/Carousel/Carousel';\nimport MusicPlayer from './components/Music Player/MusicPlayer';\nimport CardMusic from './components/Card/CardMusic';\nimport CardGroup from './components/Card/CardGroup';\nimport TopChart from './components/TopChart/TopChart';\nimport Favourites from './components/Favourites/Favourites';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport { Credentials } from './Credentials';\nimport axios from \"axios\";\n\nfunction App() {\n  _s();\n\n  const spotify = Credentials();\n  console.log('RENDERING APP.JS');\n  const [token, setToken] = useState('');\n  const [playlistId, setPlaylistId] = useState('');\n  const [genres, setGenres] = useState({\n    selectedGenre: '',\n    listOfGenresFromAPI: []\n  });\n  const [tracks, setTracks] = useState([]);\n\n  const buttonClicked = async currToken => {\n    await axios(`https://api.spotify.com/v1/search?q=Global%20Top%2050&type=playlist`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + currToken\n      }\n    }).then(tracksResponse => {\n      setPlaylistId(tracksResponse.data.playlists.items[0].id);\n      console.log(playlistId);\n      console.log(tracksResponse.data.playlists);\n    }).then({\n      GetPlaylist\n    });\n  };\n\n  const GetPlaylist = async currToken => {\n    console.log(5);\n    console.log(playlistId);\n    await axios(`https://api.spotify.com/v1/playlists/${playlistId}/tracks `, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + currToken\n      }\n    }).then(tracksResponse => {\n      let tempArray = [];\n\n      for (let i = 0; i < tracksResponse.data.items.length; i++) {\n        tempArray = [...tempArray, {\n          index: tempArray.length,\n          artists: tracksResponse.data.items[i].track.artists[0].name,\n          spotifyLink: tracksResponse.data.items[i].track.external_urls.spotify,\n          trackId: tracksResponse.data.items[i].track.id,\n          imageUrl: tracksResponse.data.items[i].track.album.images[1].url,\n          trackName: tracksResponse.data.items[i].track.name,\n          trackPreviewUrl: tracksResponse.data.items[i].track.preview_url\n        }];\n      }\n\n      console.log(tempArray);\n      setTracks(tempArray);\n    });\n  };\n\n  useEffect(() => {\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(tokenResponse => {\n      setToken(tokenResponse.data.access_token);\n    }).then(buttonClicked(token)).then(GetPlaylist(token));\n  }, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Carousel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TopChart, {\n      props: tracks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: buttonClicked,\n      children: /*#__PURE__*/_jsxDEV(FavoriteRoundedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: GetPlaylist,\n      children: /*#__PURE__*/_jsxDEV(FavoriteRoundedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), console.log(tracks), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Favourites, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"QKJuniWMQm2jRnNL/mJCE10fDmY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pranaw/Desktop/Codes/music-player/src/App.jsx"],"names":["React","useState","useEffect","Component","render","Navbar","Footer","Carousel","MusicPlayer","CardMusic","CardGroup","TopChart","Favourites","IconButton","FavoriteRoundedIcon","Credentials","axios","App","spotify","console","log","token","setToken","playlistId","setPlaylistId","genres","setGenres","selectedGenre","listOfGenresFromAPI","tracks","setTracks","buttonClicked","currToken","method","headers","then","tracksResponse","data","playlists","items","id","GetPlaylist","tempArray","i","length","index","artists","track","name","spotifyLink","external_urls","trackId","imageUrl","album","images","url","trackName","trackPreviewUrl","preview_url","btoa","ClientId","ClientSecret","tokenResponse","access_token"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport {render} from 'react-dom';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport '../node_modules/flickity/dist/flickity.pkgd.min.js';\nimport Navbar from './components/Heading/Navbar';\nimport Footer from './components/Footer/Footer';\nimport Carousel from './components/Carousel/Carousel';\nimport MusicPlayer from './components/Music Player/MusicPlayer'\nimport CardMusic from './components/Card/CardMusic'\nimport CardGroup from './components/Card/CardGroup'\nimport TopChart from './components/TopChart/TopChart';\nimport Favourites from './components/Favourites/Favourites';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport { Credentials } from './Credentials';\nimport axios from \"axios\";\n\nfunction App() {\n\n    const spotify = Credentials();\n\n    console.log('RENDERING APP.JS');\n\n    const [token, setToken] = useState('');\n    const [playlistId, setPlaylistId] = useState('');\n    const [genres, setGenres] = useState({ selectedGenre: '', listOfGenresFromAPI: [] });\n    const [tracks, setTracks] = useState([]);\n\n    const buttonClicked = async (currToken) => {\n\n        await axios(`https://api.spotify.com/v1/search?q=Global%20Top%2050&type=playlist`, {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + currToken\n            }\n        })\n            .then(tracksResponse => {\n                \n                setPlaylistId(tracksResponse.data.playlists.items[0].id)\n                \n                console.log(playlistId);\n                console.log(tracksResponse.data.playlists);\n            })\n            .then({GetPlaylist});\n\n    }\n\n    const GetPlaylist = async (currToken) => {\n\n        console.log(5);\n        console.log(playlistId);\n\n        await axios(`https://api.spotify.com/v1/playlists/${playlistId}/tracks `, {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + currToken\n            }\n        })\n            .then(tracksResponse => {\n                let tempArray=[];\n                for (let i = 0; i < tracksResponse.data.items.length; i++) {\n                    tempArray = [...tempArray, {\n                        index : tempArray.length,\n                        artists : tracksResponse.data.items[i].track.artists[0].name,\n                        spotifyLink : tracksResponse.data.items[i].track.external_urls.spotify,\n                        trackId : tracksResponse.data.items[i].track.id,\n                        imageUrl : tracksResponse.data.items[i].track.album.images[1].url,\n                        trackName : tracksResponse.data.items[i].track.name,\n                        trackPreviewUrl : tracksResponse.data.items[i].track.preview_url\n                    }]\n                }\n                console.log(tempArray);\n                setTracks(tempArray);\n            });\n    }\n\n    useEffect(() => {\n\n        axios('https://accounts.spotify.com/api/token', {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n            },\n            data: 'grant_type=client_credentials',\n            method: 'POST'\n        })\n            .then(tokenResponse => {\n                setToken(tokenResponse.data.access_token);\n            })\n            .then(buttonClicked(token))\n            .then(GetPlaylist(token));\n\n    }, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\n\n    return (\n        <>\n            {/* {buttonClicked}\n            {GetPlaylist} */}\n            <Navbar />\n            <Carousel />\n            <br></br>\n            {/* {getNewReleases} */}\n            <TopChart props={tracks}/>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            {/* <IconButton>\n                <FavoriteRoundedIcon></FavoriteRoundedIcon>\n            </IconButton>\n            <IconButton>\n                <FavoriteRoundedIcon></FavoriteRoundedIcon>\n            </IconButton> */}\n            <IconButton onClick={buttonClicked}>\n                <FavoriteRoundedIcon></FavoriteRoundedIcon>\n            </IconButton>\n            <IconButton onClick={GetPlaylist}>\n                <FavoriteRoundedIcon></FavoriteRoundedIcon>\n            </IconButton>\n            {console.log(tracks)}\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Favourites />\n            <Footer />\n        </>\n    );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}