{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pranaw/Desktop/Codes/music-player/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'flickity/dist/flickity.pkgd.min';\nimport { Credentials } from './Credentials';\nimport axios from \"axios\";\nconst spotify = Credentials();\nconsole.log('RENDERING APP.JS');\nconst [token, setToken] = useState('');\nconst [playlistId, setPlaylistId] = useState('');\nconst [genres, setGenres] = useState({\n  selectedGenre: '',\n  listOfGenresFromAPI: []\n});\nconst [tracks, setTracks] = useState([]);\nuseEffect(() => {\n  axios('https://accounts.spotify.com/api/token', {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n    },\n    data: 'grant_type=client_credentials',\n    method: 'POST'\n  }).then(tokenResponse => {\n    setToken(tokenResponse.data.access_token);\n    axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + tokenResponse.data.access_token\n      }\n    }).then(genreResponse => {\n      setGenres({\n        selectedGenre: genres.selectedGenre,\n        listOfGenresFromAPI: genreResponse.data.categories.items\n      });\n    });\n  });\n}, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\n\nconst GetPlaylist = async () => {\n  console.log(5);\n  console.log(playlistId);\n  axios(`https://api.spotify.com/v1/playlists/${playlistId}/tracks `, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(tracksResponse => {\n    let tempArray = [];\n\n    for (let i = 0; i < tracksResponse.data.items.length; i++) {\n      tempArray = [...tempArray, {\n        index: tempArray.length,\n        artists: tracksResponse.data.items[i].track.artists[0].name,\n        spotifyLink: tracksResponse.data.items[i].track.external_urls.spotify,\n        trackId: tracksResponse.data.items[i].track.id,\n        imageUrl: tracksResponse.data.items[i].track.album.images[1].url,\n        trackName: tracksResponse.data.items[i].track.name,\n        trackPreviewUrl: tracksResponse.data.items[i].track.preview_url\n      }];\n    }\n\n    console.log(tempArray);\n    setTracks(tempArray);\n  });\n};\n\n_c = GetPlaylist;\n\nconst buttonClicked = async () => {\n  axios(`https://api.spotify.com/v1/search?q=Global%20Top%2050&type=playlist`, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(tracksResponse => {\n    setPlaylistId(tracksResponse.data.playlists.items[0].id);\n    console.log(playlistId);\n    console.log(tracksResponse.data.playlists);\n  }).then();\n};\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [buttonClicked, /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this)]\n}, void 0, true), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"GetPlaylist\");","map":{"version":3,"sources":["/home/pranaw/Desktop/Codes/music-player/src/index.js"],"names":["React","useState","useEffect","ReactDOM","App","Credentials","axios","spotify","console","log","token","setToken","playlistId","setPlaylistId","genres","setGenres","selectedGenre","listOfGenresFromAPI","tracks","setTracks","headers","btoa","ClientId","ClientSecret","data","method","then","tokenResponse","access_token","genreResponse","categories","items","GetPlaylist","tracksResponse","tempArray","i","length","index","artists","track","name","spotifyLink","external_urls","trackId","id","imageUrl","album","images","url","trackName","trackPreviewUrl","preview_url","buttonClicked","playlists","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'flickity/dist/flickity.pkgd.min';\nimport { Credentials } from './Credentials';\nimport axios from \"axios\";\n\nconst spotify = Credentials();\n\nconsole.log('RENDERING APP.JS');\n\nconst [token, setToken] = useState('');\nconst [playlistId, setPlaylistId] = useState('');\nconst [genres, setGenres] = useState({ selectedGenre: '', listOfGenresFromAPI: [] });\nconst [tracks, setTracks] = useState([]);\n\nuseEffect(() => {\n\n  axios('https://accounts.spotify.com/api/token', {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n    },\n    data: 'grant_type=client_credentials',\n    method: 'POST'\n  })\n    .then(tokenResponse => {\n      setToken(tokenResponse.data.access_token);\n\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + tokenResponse.data.access_token }\n      })\n        .then(genreResponse => {\n          setGenres({\n            selectedGenre: genres.selectedGenre,\n            listOfGenresFromAPI: genreResponse.data.categories.items\n          })\n        });\n\n    });\n\n}, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\n\nconst GetPlaylist = async () => {\n\n  console.log(5);\n  console.log(playlistId);\n\n  axios(`https://api.spotify.com/v1/playlists/${playlistId}/tracks `, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  })\n  .then(tracksResponse => {\n    let tempArray = [];\n    for (let i = 0; i < tracksResponse.data.items.length; i++) {\n      tempArray = [...tempArray, {\n        index: tempArray.length,\n        artists: tracksResponse.data.items[i].track.artists[0].name,\n        spotifyLink: tracksResponse.data.items[i].track.external_urls.spotify,\n        trackId: tracksResponse.data.items[i].track.id,\n        imageUrl: tracksResponse.data.items[i].track.album.images[1].url,\n        trackName: tracksResponse.data.items[i].track.name,\n        trackPreviewUrl: tracksResponse.data.items[i].track.preview_url\n      }]\n    }\n    console.log(tempArray);\n    setTracks(tempArray);\n\n  });\n}\n\n\nconst buttonClicked = async () => {\n\n  axios(`https://api.spotify.com/v1/search?q=Global%20Top%2050&type=playlist`, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  })\n    .then(tracksResponse => {\n\n      setPlaylistId(tracksResponse.data.playlists.items[0].id)\n\n      console.log(playlistId);\n      console.log(tracksResponse.data.playlists);\n    })\n    .then(\n      \n    );\n}\n\n\n\n\n\nReactDOM.render(\n\n\n\n\n  <>\n\n    {buttonClicked}\n    <App />\n\n  </>,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}