{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pranaw/Desktop/Codes/music-player/src/components/SearchResults/Onsearch.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport \"./../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./../../../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport Navbar from './../Heading/Navbar';\nimport Footer from './../Footer/Footer';\nimport Carousel from './../Carousel/Carousel';\nimport TopChart from './../TopChart/TopChart';\nimport Favourites from './../Favourites/Favourites'; // import { Credentials } from './Credentials';\n\nimport axios from \"axios\";\n\nfunction Onsearch() {\n  // const spotify = Credentials();\n  // console.log('RENDERING APP.JS');\n  // const [token, setToken] = useState('');\n  // const [tracks, setTracks] = useState([]);\n  // const [loading, setLoading] = useState(false);\n  // const GetPlaylist = async (currToken, playlistId) => {\n  //     await axios(`https://api.spotify.com/v1/playlists/${playlistId}/tracks `, {\n  //         method: 'GET',\n  //         headers: {\n  //             'Authorization': 'Bearer ' + currToken\n  //         }\n  //     })\n  //         .then(tracksResponse => {\n  //             let tempArray = [];\n  //             for (let i = 0; i < 10; i++) {\n  //                 tempArray = [...tempArray, {\n  //                     index: tempArray.length,\n  //                     artists: tracksResponse.data.items[i].track.artists[0].name,\n  //                     spotifyLink: tracksResponse.data.items[i].track.external_urls.spotify,\n  //                     trackId: tracksResponse.data.items[i].track.id,\n  //                     imageUrl: tracksResponse.data.items[i].track.album.images[1].url,\n  //                     trackName: tracksResponse.data.items[i].track.name,\n  //                     trackPreviewUrl: tracksResponse.data.items[i].track.preview_url\n  //                 }]\n  //             }\n  //             setTracks(tempArray);\n  //         });\n  //         setLoading(true);\n  //         // tracksResponse.data.items.length\n  // }\n  // const buttonClicked = async (currToken) => {\n  //     await axios(`https://api.spotify.com/v1/search?q=Global%20Top%2050&type=playlist`, {\n  //         method: 'GET',\n  //         headers: {\n  //             'Authorization': 'Bearer ' + currToken\n  //         }\n  //     })\n  //         .then(tracksResponse => {\n  //             GetPlaylist(currToken, tracksResponse.data.playlists.items[0].id)\n  //         })\n  // }\n  // useEffect(() => {\n  //     axios('https://accounts.spotify.com/api/token', {\n  //         headers: {\n  //             'Content-Type': 'application/x-www-form-urlencoded',\n  //             'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n  //         },\n  //         data: 'grant_type=client_credentials',\n  //         method: 'POST'\n  //     })\n  //         .then(tokenResponse => {\n  //             setToken(tokenResponse.data.access_token);\n  //             buttonClicked(tokenResponse.data.access_token);\n  //         });\n  // }, [spotify.ClientId, spotify.ClientSecret]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Carousel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TopChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Onsearch;\nexport default Onsearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Onsearch\");","map":{"version":3,"sources":["/home/pranaw/Desktop/Codes/music-player/src/components/SearchResults/Onsearch.jsx"],"names":["React","useState","useEffect","Navbar","Footer","Carousel","TopChart","Favourites","axios","Onsearch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,8DAAP;AACA,OAAO,4DAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAoB;AAEhB;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAWH;;KAnFQA,Q;AAoFT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./../../../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport Navbar from './../Heading/Navbar';\nimport Footer from './../Footer/Footer';\nimport Carousel from './../Carousel/Carousel';\nimport TopChart from './../TopChart/TopChart';\nimport Favourites from './../Favourites/Favourites';\n// import { Credentials } from './Credentials';\nimport axios from \"axios\";\n\nfunction Onsearch() {\n\n    // const spotify = Credentials();\n\n    // console.log('RENDERING APP.JS');\n\n    // const [token, setToken] = useState('');\n    // const [tracks, setTracks] = useState([]);\n    // const [loading, setLoading] = useState(false);\n\n    // const GetPlaylist = async (currToken, playlistId) => {\n\n\n    //     await axios(`https://api.spotify.com/v1/playlists/${playlistId}/tracks `, {\n    //         method: 'GET',\n    //         headers: {\n    //             'Authorization': 'Bearer ' + currToken\n    //         }\n    //     })\n    //         .then(tracksResponse => {\n    //             let tempArray = [];\n    //             for (let i = 0; i < 10; i++) {\n    //                 tempArray = [...tempArray, {\n    //                     index: tempArray.length,\n    //                     artists: tracksResponse.data.items[i].track.artists[0].name,\n    //                     spotifyLink: tracksResponse.data.items[i].track.external_urls.spotify,\n    //                     trackId: tracksResponse.data.items[i].track.id,\n    //                     imageUrl: tracksResponse.data.items[i].track.album.images[1].url,\n    //                     trackName: tracksResponse.data.items[i].track.name,\n    //                     trackPreviewUrl: tracksResponse.data.items[i].track.preview_url\n    //                 }]\n    //             }\n    //             setTracks(tempArray);\n    //         });\n    //         setLoading(true);\n    //         // tracksResponse.data.items.length\n    // }\n\n    // const buttonClicked = async (currToken) => {\n\n    //     await axios(`https://api.spotify.com/v1/search?q=Global%20Top%2050&type=playlist`, {\n    //         method: 'GET',\n    //         headers: {\n    //             'Authorization': 'Bearer ' + currToken\n    //         }\n    //     })\n    //         .then(tracksResponse => {\n\n    //             GetPlaylist(currToken, tracksResponse.data.playlists.items[0].id)\n    //         })\n\n\n    // }\n\n    // useEffect(() => {\n\n    //     axios('https://accounts.spotify.com/api/token', {\n    //         headers: {\n    //             'Content-Type': 'application/x-www-form-urlencoded',\n    //             'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n    //         },\n    //         data: 'grant_type=client_credentials',\n    //         method: 'POST'\n    //     })\n    //         .then(tokenResponse => {\n    //             setToken(tokenResponse.data.access_token);\n    //             buttonClicked(tokenResponse.data.access_token);\n    //         });\n\n\n    // }, [spotify.ClientId, spotify.ClientSecret]);\n\n    return (\n        <>\n            <Navbar />\n            <Carousel />\n\n\n\n\n            <TopChart />\n        </>\n    );\n}\nexport default Onsearch;"]},"metadata":{},"sourceType":"module"}