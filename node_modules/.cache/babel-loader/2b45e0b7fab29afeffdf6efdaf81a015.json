{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pranaw/Desktop/Codes/music-player/src/components/SearchResults/SearchBar.jsx\";\nimport React, { useState } from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport axios from \"axios\";\nimport { Credentials } from \"./../../Credentials\";\nimport CardGroupSearch from \"./../Card/CardGroupSearch\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSearchResults = (updatedPageNo = '', query, mytoken) => {\n      const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : ''; // By default the limit of results is 20\n\n      const searchUrl = `https://api.spotify.com/v1/search?q=${query}&type=track`;\n\n      if (this.cancel) {\n        // Cancel the previous request before making a new request\n        this.cancel.cancel();\n      } // Create a new CancelToken\n\n\n      this.cancel = axios.CancelToken.source();\n      axios(searchUrl, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + mytoken\n        },\n        cancelToken: this.cancel.token\n      }).then(res => {\n        console.log(res); // const resultNotFoundMsg = !res.data.tracks.items.length\n        //     ? 'There are no more search results. Please try a new search.'\n        //     : '';\n\n        let tempArray = [];\n\n        for (let i = 0; i < res.data.tracks.items.length; i++) {\n          tempArray = [...tempArray, {\n            index: tempArray.length,\n            artists: res.data.tracks.items[i].track.artists[0].name,\n            spotifyLink: res.data.tracks.items[i].track.external_urls.spotify,\n            trackId: res.data.tracks.items[i].track.id,\n            imageUrl: res.data.tracks.items[i].track.album.images[1].url,\n            trackName: res.data.tracks.items[i].track.name,\n            trackPreviewUrl: res.data.tracks.items[i].track.preview_url\n          }];\n          console.log(tempArray);\n        }\n\n        this.setState({\n          results: res,\n          message: resultNotFoundMsg,\n          loading: false\n        });\n      }).catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({\n            loading: false,\n            message: 'Failed to fetch results.Please check network'\n          });\n        }\n      });\n    };\n\n    this.getToken = query => {\n      const spotify = Credentials();\n      console.log('RENDERING APP.JS');\n      axios('https://accounts.spotify.com/api/token', {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n        },\n        data: 'grant_type=client_credentials',\n        method: 'POST'\n      }).then(tokenResponse => {\n        // console.log(tokenResponse)\n        let curr = tokenResponse.data.access_token;\n        this.fetchSearchResults(1, query, curr);\n        this.setState({\n          token: curr\n        });\n      });\n    };\n\n    this.handleOnInputChange = event => {\n      console.log(\"typed\");\n      const query = event.target.value;\n\n      if (!query) {\n        this.setState({\n          query,\n          results: {},\n          message: ''\n        });\n      } else {\n        this.setState({\n          query,\n          loading: true,\n          message: ''\n        }, () => {\n          this.getToken(query);\n        });\n      }\n    };\n\n    this.renderSearchResults = () => {\n      const results = this.state.results; // console.log(this.state.results)\n\n      if (Object.keys(results).length && results.length) {\n        return /*#__PURE__*/_jsxDEV(CardGroupSearch, {\n          params: results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.state = {\n      query: '',\n      results: {},\n      token: '',\n      loading: false,\n      message: ''\n    };\n    this.cancel = '';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control d-inline\",\n          id: \"search-input\",\n          type: \"search\",\n          style: {\n            borderRadius: \"16px\"\n          },\n          placeholder: \"Search for song\",\n          \"aria-label\": \"Search\",\n          onChange: this.handleOnInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          type: \"submit\",\n          href: \"/search\",\n          children: /*#__PURE__*/_jsxDEV(SearchRoundedIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), this.renderSearchResults()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/pranaw/Desktop/Codes/music-player/src/components/SearchResults/SearchBar.jsx"],"names":["React","useState","IconButton","SearchRoundedIcon","axios","Credentials","CardGroupSearch","SearchBar","Component","constructor","props","fetchSearchResults","updatedPageNo","query","mytoken","pageNumber","searchUrl","cancel","CancelToken","source","method","headers","cancelToken","token","then","res","console","log","tempArray","i","data","tracks","items","length","index","artists","track","name","spotifyLink","external_urls","spotify","trackId","id","imageUrl","album","images","url","trackName","trackPreviewUrl","preview_url","setState","results","message","resultNotFoundMsg","loading","catch","error","isCancel","getToken","btoa","ClientId","ClientSecret","tokenResponse","curr","access_token","handleOnInputChange","event","target","value","renderSearchResults","state","Object","keys","render","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport axios from \"axios\";\nimport { Credentials } from \"./../../Credentials\";\nimport CardGroupSearch from \"./../Card/CardGroupSearch\";\n\nclass SearchBar extends React.Component {\n\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: '',\n            results: {},\n            token: '',\n            loading: false,\n            message: '',\n        };\n        this.cancel = '';\n    }\n\n\n    fetchSearchResults = (updatedPageNo = '', query, mytoken) => {\n        const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : '';\t// By default the limit of results is 20\n        const searchUrl = `https://api.spotify.com/v1/search?q=${query}&type=track`; if (this.cancel) {\n            // Cancel the previous request before making a new request\n            this.cancel.cancel();\n        }\n        // Create a new CancelToken\n        this.cancel = axios.CancelToken.source();\n        axios(searchUrl, {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + mytoken,\n\n            },\n            cancelToken: this.cancel.token\n        })\n\n            .then((res) => {\n                console.log(res);\n                // const resultNotFoundMsg = !res.data.tracks.items.length\n                //     ? 'There are no more search results. Please try a new search.'\n                //     : '';\n                let tempArray = [];\n                for (let i = 0; i < res.data.tracks.items.length; i++) {\n                    tempArray = [...tempArray, {\n                        index: tempArray.length,\n                        artists: res.data.tracks.items[i].track.artists[0].name,\n                        spotifyLink: res.data.tracks.items[i].track.external_urls.spotify,\n                        trackId: res.data.tracks.items[i].track.id,\n                        imageUrl: res.data.tracks.items[i].track.album.images[1].url,\n                        trackName: res.data.tracks.items[i].track.name,\n                        trackPreviewUrl: res.data.tracks.items[i].track.preview_url\n                    }]\n                console.log(tempArray)\n\n                }\n                this.setState({\n                    \n                    results: res,\n                    message: resultNotFoundMsg,\n                    loading: false,\n                })\n            })\n            .catch((error) => {\n                if (axios.isCancel(error) || error) {\n                    this.setState({\n                        loading: false,\n                        message: 'Failed to fetch results.Please check network',\n                    });\n                }\n            });\n    };\n\n    getToken = (query) => {\n        const spotify = Credentials();\n\n        console.log('RENDERING APP.JS');\n\n        axios('https://accounts.spotify.com/api/token', {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n            },\n            data: 'grant_type=client_credentials',\n            method: 'POST'\n        })\n            .then(tokenResponse => {\n                // console.log(tokenResponse)\n                let curr = tokenResponse.data.access_token\n                this.fetchSearchResults(1, query, curr)\n                this.setState({ token: curr })\n            });\n    }\n\n    handleOnInputChange = (event) => {\n        console.log(\"typed\")\n        const query = event.target.value;\n        if (!query) {\n            this.setState({ query, results: {}, message: '' });\n        } else {\n            this.setState({ query, loading: true, message: '' }, () => {\n                this.getToken(query);\n            });\n        }\n    };\n\n    renderSearchResults = () => {\n        const results = this.state.results;\t\n        // console.log(this.state.results)\n        if (Object.keys(results).length && results.length) {\n            return (\n                <CardGroupSearch params={results}></CardGroupSearch>\n                \n            );\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"d-flex align-items-center\">\n                    <input\n                        className=\"form-control d-inline\"\n                        id=\"search-input\"\n                        type=\"search\"\n                        style={{ borderRadius: \"16px\" }}\n                        placeholder=\"Search for song\"\n                        aria-label=\"Search\"\n                        onChange={this.handleOnInputChange}\n                    />\n                    <IconButton type=\"submit\" href=\"/search\">\n                        <SearchRoundedIcon color=\"primary\" />\n                    </IconButton>\n\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                </form>\n                {this.renderSearchResults()}\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}