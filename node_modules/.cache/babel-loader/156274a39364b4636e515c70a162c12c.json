{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pranaw/Desktop/Codes/music-player/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport '../node_modules/flickity/dist/flickity.pkgd.min.js';\nimport Navbar from './components/Heading/Navbar';\nimport Footer from './components/Footer/Footer';\nimport Carousel from './components/Carousel/Carousel';\nimport MusicPlayer from './components/Music Player/MusicPlayer';\nimport CardMusic from './components/Card/CardMusic';\nimport CardGroup from './components/Card/CardGroup';\nimport TopChart from './components/TopChart/TopChart';\nimport Favourites from './components/Favourites/Favourites';\nimport { Credentials } from './Credentials';\nimport axios from \"axios\";\n\nfunction App() {\n  _s();\n\n  const spotify = Credentials();\n  console.log('RENDERING APP.JS');\n  const [token, setToken] = useState('');\n  const [genres, setGenres] = useState({\n    selectedGenre: '',\n    listOfGenresFromAPI: []\n  });\n  const [playlist, setPlaylist] = useState({\n    selectedPlaylist: '',\n    listOfPlaylistFromAPI: []\n  });\n  const [tracks, setTracks] = useState({\n    selectedTrack: '',\n    listOfTracksFromAPI: []\n  });\n  const [trackDetail, setTrackDetail] = useState(null);\n  useEffect(() => {\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(tokenResponse => {\n      setToken(tokenResponse.data.access_token);\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + tokenResponse.data.access_token\n        }\n      }).then(genreResponse => {\n        setGenres({\n          selectedGenre: genres.selectedGenre,\n          listOfGenresFromAPI: genreResponse.data.categories.items\n        });\n      });\n    });\n  }, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\n\n  const genreChanged = val => {\n    setGenres({\n      selectedGenre: val,\n      listOfGenresFromAPI: genres.listOfGenresFromAPI\n    });\n    axios(`https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(playlistResponse => {\n      setPlaylist({\n        selectedPlaylist: playlist.selectedPlaylist,\n        listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n      });\n    });\n    console.log(val);\n  };\n\n  const playlistChanged = val => {\n    console.log(val);\n    setPlaylist({\n      selectedPlaylist: val,\n      listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI\n    });\n  };\n\n  const buttonClicked = e => {\n    e.preventDefault();\n    axios(`https://api.spotify.com/v1/playlists/${playlist.selectedPlaylist}/tracks?limit=10`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(tracksResponse => {\n      setTracks({\n        selectedTrack: tracks.selectedTrack,\n        listOfTracksFromAPI: tracksResponse.data.items\n      });\n    });\n  };\n\n  const listboxClicked = val => {\n    const currentTracks = [...tracks.listOfTracksFromAPI];\n    const trackInfo = currentTracks.filter(t => t.track.id === val);\n    setTrackDetail(trackInfo[0].track);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Carousel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TopChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Favourites, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"o3qFucp81K14tg7wvc/dR1aNKnM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pranaw/Desktop/Codes/music-player/src/App.jsx"],"names":["React","useState","useEffect","Navbar","Footer","Carousel","MusicPlayer","CardMusic","CardGroup","TopChart","Favourites","Credentials","axios","App","spotify","console","log","token","setToken","genres","setGenres","selectedGenre","listOfGenresFromAPI","playlist","setPlaylist","selectedPlaylist","listOfPlaylistFromAPI","tracks","setTracks","selectedTrack","listOfTracksFromAPI","trackDetail","setTrackDetail","headers","btoa","ClientId","ClientSecret","data","method","then","tokenResponse","access_token","genreResponse","categories","items","genreChanged","val","playlistResponse","playlists","playlistChanged","buttonClicked","e","preventDefault","tracksResponse","listboxClicked","currentTracks","trackInfo","filter","t","track","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport '../node_modules/flickity/dist/flickity.pkgd.min.js';\nimport Navbar from './components/Heading/Navbar';\nimport Footer from './components/Footer/Footer';\nimport Carousel from './components/Carousel/Carousel';\nimport MusicPlayer from './components/Music Player/MusicPlayer'\nimport CardMusic from './components/Card/CardMusic'\nimport CardGroup from './components/Card/CardGroup'\nimport TopChart from './components/TopChart/TopChart';\nimport Favourites from './components/Favourites/Favourites';\nimport { Credentials } from './Credentials';\nimport axios from \"axios\";\n\nfunction App() {\n\n    const spotify = Credentials();\n\n    console.log('RENDERING APP.JS');\n\n    const [token, setToken] = useState('');\n    const [genres, setGenres] = useState({ selectedGenre: '', listOfGenresFromAPI: [] });\n    const[playlist, setPlaylist] = useState({ selectedPlaylist: '', listOfPlaylistFromAPI: [] });\n    const [tracks, setTracks] = useState({ selectedTrack: '', listOfTracksFromAPI: [] });\n    const [trackDetail, setTrackDetail] = useState(null);\n\n    useEffect(() => {\n\n        axios('https://accounts.spotify.com/api/token', {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n            },\n            data: 'grant_type=client_credentials',\n            method: 'POST'\n        })\n            .then(tokenResponse => {\n                setToken(tokenResponse.data.access_token);\n\n                axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n                    method: 'GET',\n                    headers: { 'Authorization': 'Bearer ' + tokenResponse.data.access_token }\n                })\n                    .then(genreResponse => {\n                        setGenres({\n                            selectedGenre: genres.selectedGenre,\n                            listOfGenresFromAPI: genreResponse.data.categories.items\n                        })\n                    });\n\n            });\n\n    }, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\n\n    const genreChanged = val => {\n        setGenres({\n            selectedGenre: val,\n            listOfGenresFromAPI: genres.listOfGenresFromAPI\n        });\n\n        axios(`https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`, {\n            method: 'GET',\n            headers: { 'Authorization': 'Bearer ' + token }\n        })\n            .then(playlistResponse => {\n                setPlaylist({\n                    selectedPlaylist: playlist.selectedPlaylist,\n                    listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n                })\n            });\n\n        console.log(val);\n    }\n\n    const playlistChanged = val => {\n        console.log(val);\n        setPlaylist({\n            selectedPlaylist: val,\n            listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI\n        });\n    }\n\n    const buttonClicked = e => {\n        e.preventDefault();\n\n        axios(`https://api.spotify.com/v1/playlists/${playlist.selectedPlaylist}/tracks?limit=10`, {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        })\n            .then(tracksResponse => {\n                setTracks({\n                    selectedTrack: tracks.selectedTrack,\n                    listOfTracksFromAPI: tracksResponse.data.items\n                })\n            });\n    }\n\n    const listboxClicked = val => {\n\n        const currentTracks = [...tracks.listOfTracksFromAPI];\n\n        const trackInfo = currentTracks.filter(t => t.track.id === val);\n\n        setTrackDetail(trackInfo[0].track);\n\n\n\n    }\n\n    return (\n        <>\n            <Navbar />\n            <Carousel />\n            <br></br>\n            <TopChart />\n            <Favourites />\n            <Footer />\n        </>\n    );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}