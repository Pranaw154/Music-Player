{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pranaw/Desktop/Codes/music-player/src/components/TopChart/TopChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport CardGroupHeading from './../CardGroupHeading/CardGroupHeading';\nimport CardGroup from \"./../Card/CardGroup\";\nimport { Credentials } from './../../Credentials';\nimport axios from \"axios\";\n\nfunction TopChart(props) {\n  _s();\n\n  const spotify = Credentials();\n  console.log('RENDERING APP.JS');\n  const [token, setToken] = useState('');\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const GetPlaylist = (currToken, playlistId) => {\n    axios(`https://api.spotify.com/v1/playlists/${playlistId}/tracks `, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + currToken\n      }\n    }).then(tracksResponse => {\n      let tempArray = [];\n\n      for (let i = 0; i < 6; i++) {\n        tempArray = [...tempArray, {\n          index: tempArray.length,\n          artists: tracksResponse.data.items[i].track.artists[0].name,\n          spotifyLink: tracksResponse.data.items[i].track.external_urls.spotify,\n          trackId: tracksResponse.data.items[i].track.id,\n          imageUrl: tracksResponse.data.items[i].track.album.images[1].url,\n          trackName: tracksResponse.data.items[i].track.name,\n          trackPreviewUrl: tracksResponse.data.items[i].track.preview_url\n        }];\n      }\n\n      setTracks(tempArray);\n    });\n    setLoading(true); // tracksResponse.data.items.length\n  };\n\n  const buttonClicked = currToken => {\n    axios(`https://api.spotify.com/v1/search?q=Global%20Top%2050&type=playlist`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + currToken\n      }\n    }).then(tracksResponse => {\n      GetPlaylist(currToken, tracksResponse.data.playlists.items[0].id);\n    });\n  };\n\n  useEffect(() => {\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(tokenResponse => {\n      setToken(tokenResponse.data.access_token);\n      buttonClicked(tokenResponse.data.access_token);\n    });\n  }, [spotify.ClientId, spotify.ClientSecret]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CardGroupHeading, {\n      name: \"Top Charts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CardGroup, {\n      playlist: tracks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-grow text-primary\",\n        style: {\n          width: \"3rem\",\n          height: \"3rem\"\n        },\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 58\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TopChart, \"LET/wt8n2nJZe4ZhkO/AQpiwqxs=\");\n\n_c = TopChart;\nexport default TopChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopChart\");","map":{"version":3,"sources":["/home/pranaw/Desktop/Codes/music-player/src/components/TopChart/TopChart.jsx"],"names":["React","useState","useEffect","CardGroupHeading","CardGroup","Credentials","axios","TopChart","props","spotify","console","log","token","setToken","tracks","setTracks","loading","setLoading","GetPlaylist","currToken","playlistId","method","headers","then","tracksResponse","tempArray","i","index","length","artists","data","items","track","name","spotifyLink","external_urls","trackId","id","imageUrl","album","images","url","trackName","trackPreviewUrl","preview_url","buttonClicked","playlists","btoa","ClientId","ClientSecret","tokenResponse","access_token","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport CardGroupHeading from './../CardGroupHeading/CardGroupHeading';\nimport CardGroup from \"./../Card/CardGroup\";\nimport { Credentials } from './../../Credentials';\nimport axios from \"axios\";\n\nfunction TopChart(props) {\n\n    const spotify = Credentials();\n\n    console.log('RENDERING APP.JS');\n\n    const [token, setToken] = useState('');\n    const [tracks, setTracks] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const GetPlaylist = (currToken, playlistId) => {\n\n\n        axios(`https://api.spotify.com/v1/playlists/${playlistId}/tracks `, {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + currToken\n            }\n        })\n            .then(tracksResponse => {\n                let tempArray = [];\n                for (let i = 0; i < 6; i++) {\n                    tempArray = [...tempArray, {\n                        index: tempArray.length,\n                        artists: tracksResponse.data.items[i].track.artists[0].name,\n                        spotifyLink: tracksResponse.data.items[i].track.external_urls.spotify,\n                        trackId: tracksResponse.data.items[i].track.id,\n                        imageUrl: tracksResponse.data.items[i].track.album.images[1].url,\n                        trackName: tracksResponse.data.items[i].track.name,\n                        trackPreviewUrl: tracksResponse.data.items[i].track.preview_url\n                    }]\n                }\n                setTracks(tempArray);\n            });\n            setLoading(true);\n            // tracksResponse.data.items.length\n    }\n\n    const buttonClicked = (currToken) => {\n\n        axios(`https://api.spotify.com/v1/search?q=Global%20Top%2050&type=playlist`, {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + currToken\n            }\n        })\n            .then(tracksResponse => {\n\n                GetPlaylist(currToken, tracksResponse.data.playlists.items[0].id)\n            })\n\n\n    }\n\n    useEffect(() => {\n\n        axios('https://accounts.spotify.com/api/token', {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n            },\n            data: 'grant_type=client_credentials',\n            method: 'POST'\n        })\n            .then(tokenResponse => {\n                setToken(tokenResponse.data.access_token);\n                buttonClicked(tokenResponse.data.access_token);\n            });\n\n\n    }, [spotify.ClientId, spotify.ClientSecret]);\n\n\n\n\n    return(\n        <div>\n            <CardGroupHeading\n                name=\"Top Charts\"\n            />\n            {loading ? <CardGroup playlist={tracks} /> : <div className=\"text-center\">\n                <div className=\"spinner-grow text-primary\" style={{ width: \"3rem\", height: \"3rem\" }} role=\"status\">\n                    <span className=\"visually-hidden\">.</span>\n                </div>\n            </div>}\n            \n        </div>\n\n    );\n}\n\nexport default TopChart;"]},"metadata":{},"sourceType":"module"}