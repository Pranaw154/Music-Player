{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pranaw/Desktop/Codes/music-player/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'flickity/dist/flickity.pkgd.min';\nimport { Credentials } from './Credentials';\nimport axios from \"axios\";\nconst spotify = Credentials();\nconsole.log('RENDERING APP.JS');\nconst [token, setToken] = useState('');\nconst [playlistId, setPlaylistId] = useState('');\nconst [genres, setGenres] = useState({\n  selectedGenre: '',\n  listOfGenresFromAPI: []\n});\nconst [tracks, setTracks] = useState([]);\nuseEffect(() => {\n  axios('https://accounts.spotify.com/api/token', {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n    },\n    data: 'grant_type=client_credentials',\n    method: 'POST'\n  }).then(tokenResponse => {\n    setToken(tokenResponse.data.access_token);\n    axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + tokenResponse.data.access_token\n      }\n    }).then(genreResponse => {\n      setGenres({\n        selectedGenre: genres.selectedGenre,\n        listOfGenresFromAPI: genreResponse.data.categories.items\n      });\n    });\n  });\n}, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\n\nconst buttonClicked = async () => {\n  axios(`https://api.spotify.com/v1/search?q=Global%20Top%2050&type=playlist`, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(tracksResponse => {\n    setPlaylistId(tracksResponse.data.playlists.items[0].id);\n    console.log(playlistId);\n    console.log(tracksResponse.data.playlists);\n  });\n};\n\nconst GetPlaylist = async () => {\n  console.log(5);\n  console.log(playlistId);\n  axios(`https://api.spotify.com/v1/playlists/${playlistId}/tracks `, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(tracksResponse => {\n    let tempArray = [];\n\n    for (let i = 0; i < tracksResponse.data.items.length; i++) {\n      tempArray = [...tempArray, {\n        index: tempArray.length,\n        artists: tracksResponse.data.items[i].track.artists[0].name,\n        spotifyLink: tracksResponse.data.items[i].track.external_urls.spotify,\n        trackId: tracksResponse.data.items[i].track.id,\n        imageUrl: tracksResponse.data.items[i].track.album.images[1].url,\n        trackName: tracksResponse.data.items[i].track.name,\n        trackPreviewUrl: tracksResponse.data.items[i].track.preview_url\n      }];\n    }\n\n    console.log(tempArray);\n    setTracks(tempArray);\n  });\n};\n\n_c = GetPlaylist;\nReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [buttonClicked, /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this)]\n}, void 0, true), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"GetPlaylist\");","map":{"version":3,"sources":["/home/pranaw/Desktop/Codes/music-player/src/index.js"],"names":["React","ReactDOM","App","Credentials","axios","spotify","console","log","token","setToken","useState","playlistId","setPlaylistId","genres","setGenres","selectedGenre","listOfGenresFromAPI","tracks","setTracks","useEffect","headers","btoa","ClientId","ClientSecret","data","method","then","tokenResponse","access_token","genreResponse","categories","items","buttonClicked","tracksResponse","playlists","id","GetPlaylist","tempArray","i","length","index","artists","track","name","spotifyLink","external_urls","trackId","imageUrl","album","images","url","trackName","trackPreviewUrl","preview_url","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'flickity/dist/flickity.pkgd.min';\nimport { Credentials } from './Credentials';\nimport axios from \"axios\";\n\nconst spotify = Credentials();\n\nconsole.log('RENDERING APP.JS');\n\nconst [token, setToken] = useState('');\nconst [playlistId, setPlaylistId] = useState('');\nconst [genres, setGenres] = useState({ selectedGenre: '', listOfGenresFromAPI: [] });\nconst [tracks, setTracks] = useState([]);\n\nuseEffect(() => {\n\n    axios('https://accounts.spotify.com/api/token', {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n        },\n        data: 'grant_type=client_credentials',\n        method: 'POST'\n    })\n        .then(tokenResponse => {\n            setToken(tokenResponse.data.access_token);\n\n            axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n                method: 'GET',\n                headers: { 'Authorization': 'Bearer ' + tokenResponse.data.access_token }\n            })\n                .then(genreResponse => {\n                    setGenres({\n                        selectedGenre: genres.selectedGenre,\n                        listOfGenresFromAPI: genreResponse.data.categories.items\n                    })\n                });\n\n        });\n\n}, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\n\n\nconst buttonClicked = async () => {\n\n    axios(`https://api.spotify.com/v1/search?q=Global%20Top%2050&type=playlist`, {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + token\n        }\n    })\n        .then(tracksResponse => {\n            \n            setPlaylistId(tracksResponse.data.playlists.items[0].id)\n            \n            console.log(playlistId);\n            console.log(tracksResponse.data.playlists);\n        });\n}\n\nconst GetPlaylist = async () => {\n\n    console.log(5);\n    console.log(playlistId);\n\n    axios(`https://api.spotify.com/v1/playlists/${playlistId}/tracks `, {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + token\n        }\n    })\n        .then(tracksResponse => {\n            let tempArray=[];\n            for (let i = 0; i < tracksResponse.data.items.length; i++) {\n                tempArray = [...tempArray, {\n                    index : tempArray.length,\n                    artists : tracksResponse.data.items[i].track.artists[0].name,\n                    spotifyLink : tracksResponse.data.items[i].track.external_urls.spotify,\n                    trackId : tracksResponse.data.items[i].track.id,\n                    imageUrl : tracksResponse.data.items[i].track.album.images[1].url,\n                    trackName : tracksResponse.data.items[i].track.name,\n                    trackPreviewUrl : tracksResponse.data.items[i].track.preview_url\n                }]\n            }\n            console.log(tempArray);\n            setTracks(tempArray);\n        });\n}\n\n\nReactDOM.render(\n  <>\n\n    {buttonClicked}\n    <App/>\n    \n  </>,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}